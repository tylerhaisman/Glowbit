{"ast":null,"code":"import _toConsumableArray from\"/Users/TylerHaisman/OneDrive/Coding Projects/Portfolio Projects/GlowbitGame/glowbit/Glowbit/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/TylerHaisman/OneDrive/Coding Projects/Portfolio Projects/GlowbitGame/glowbit/Glowbit/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import Cell from'./Cell';// function getRandomValue() {\n//   let max = 36;\n//   let min = 1;\n//   return Math.floor(Math.random() * (max - min) + min);\n// }\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var previousRow=-1;var previousCol=-1;var start=0;var totalTime=0;var count=0;var Gameboard=function Gameboard(props){var gameOver=false;var win=false;var currentLevel=props.level;var r=currentLevel+1;var c=currentLevel+1;function getRandomValue(){var max=r*c;var min=1;return Math.floor(Math.random()*(max-min)+min);}var _useState=useState(function(){var newDriver=[];for(var i=0;i<r;i++){newDriver[i]=[];for(var j=0;j<c;j++){newDriver[i][j]={isClicked:false,value:getRandomValue()};}}return newDriver;}),_useState2=_slicedToArray(_useState,2),driver=_useState2[0],setDriver=_useState2[1];var memoizationTable=[];for(var i=0;i<r;i++){var rowCells=[];for(var j=0;j<c;j++){rowCells.push(driver[i][j].value);}memoizationTable.push(rowCells);}var numRows=memoizationTable.length;var numCols=memoizationTable[0].length;memoizationTable[0][0]=driver[0][0].value;for(var row=1;row<numRows;row++){memoizationTable[row][0]=memoizationTable[row-1][0]+driver[row][0].value;}for(var col=1;col<numCols;col++){memoizationTable[0][col]=memoizationTable[0][col-1]+driver[0][col].value;}for(var _row=1;_row<numRows;_row++){for(var _col=1;_col<numCols;_col++){var val=0;if(memoizationTable[_row-1][_col]>memoizationTable[_row][_col-1]){val=memoizationTable[_row-1][_col];}else{val=memoizationTable[_row][_col-1];}memoizationTable[_row][_col]=val+driver[_row][_col].value;}}var targetSum=memoizationTable[numRows-1][numCols-1];var handleClick=function handleClick(row,col){if(!gameOver){if(row-1==previousRow&&col==previousCol||row==previousRow&&col-1==previousCol||row==0&&col==0&&driver[row][col].isClicked==false){setDriver(function(prevDriver){count++;if(count==1){start=new Date().getTime();}var newDriver=_toConsumableArray(prevDriver);newDriver[row][col].isClicked=!newDriver[row][col].isClicked;previousRow=row;previousCol=col;return newDriver;});}}};var currentSum=0;var gameboardRows=[];var _loop=function _loop(_i){var rowCells=[];var _loop2=function _loop2(_j2){if(driver[_i][_j2].isClicked){currentSum+=driver[_i][_j2].value;}if(driver[r-1][c-1].isClicked&&currentSum==targetSum){gameOver=true;win=true;end=new Date().getTime();time=end-start;totalTime=(time/1000).toFixed(2);document.getElementById(\"time\").textContent=\"Your Time: \"+totalTime+\"s\";document.getElementById(\"gameover\").textContent=\"Game Over\";document.getElementById(\"aftergame\").style.visibility=\"visible\";document.getElementById(\"winstatus\").textContent=\"You Won!\";document.getElementById(\"winstatus\").style.textShadow=\"0 0 40px #1aff00\";document.getElementById(\"winstatus\").style.color=\"#1aff00\";document.getElementById(\"endbtn\").textContent=\"Next Level\";// var button = document.createElement(\"button\");\n// button.innerHTML = \"Next Level\";\n// var buttons = document.getElementById(\"buttons\");\n// buttons.appendChild(button);\n// button.addEventListener (\"click\", function() {\n//   handleReset();\n// });\n}if(driver[r-1][c-1].isClicked&&currentSum!=targetSum){gameOver=true;win=false;end=new Date().getTime();time=end-start;totalTime=(time/1000).toFixed(2);document.getElementById(\"time\").textContent=\"Your Time: \"+totalTime+\"s\";document.getElementById(\"gameover\").textContent=\"Game Over\";document.getElementById(\"aftergame\").style.visibility=\"visible\";document.getElementById(\"winstatus\").textContent=\"You Lost\";document.getElementById(\"winstatus\").style.textShadow=\"0 0 40px #ff0000\";document.getElementById(\"winstatus\").style.color=\"#ff0000\";document.getElementById(\"endbtn\").textContent=\"Play Again\";// var button = document.createElement(\"button\");\n// button.innerHTML = \"Play Again\";\n// var buttons = document.getElementById(\"buttons\");\n// buttons.appendChild(button);\n// button.addEventListener (\"click\", function() {\n//   handleRefresh();\n// });\n}rowCells.push(/*#__PURE__*/_jsx(Cell,{value:driver[_i][_j2].value,isClicked:driver[_i][_j2].isClicked,onClick:function onClick(){return handleClick(_i,_j2);},isGameOver:gameOver,winStatus:win},\"\".concat(_i,\"-\").concat(_j2)));};for(var _j2=0;_j2<c;_j2++){_loop2(_j2);}gameboardRows.push(/*#__PURE__*/_jsx(\"tr\",{children:rowCells},_i));};for(var _i=0;_i<r;_i++){var end,time,end,time;_loop(_i);}var handleReset=function handleReset(){if(!win){window.location.reload();}else{props.resetGame();previousRow=-1;previousCol=-1;start=0;totalTime=0;count=0;currentSum=0;gameOver=false;win=false;setDriver(function(prevDriver){currentLevel++;r=currentLevel+1;c=currentLevel+1;var newDriver=[];for(var _i2=0;_i2<r;_i2++){newDriver[_i2]=[];for(var _j=0;_j<c;_j++){newDriver[_i2][_j]={isClicked:false,value:getRandomValue()};}}return newDriver;});// additional reset logic goes here\ndocument.getElementById(\"aftergame\").style.visibility=\"hidden\";}};var handleRefresh=function handleRefresh(){window.location.reload();};return/*#__PURE__*/_jsxs(\"div\",{className:\"gameboard\",children:[/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:gameboardRows})}),/*#__PURE__*/_jsxs(\"div\",{id:\"aftergame\",className:\"gameover\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"gameover\"}),/*#__PURE__*/_jsx(\"h2\",{id:\"winstatus\"}),/*#__PURE__*/_jsx(\"div\",{className:\"runtime\",children:/*#__PURE__*/_jsx(\"p\",{id:\"time\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"buttons\",className:\"buttons\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,id:\"endbtn\",children:\"Next Level\"})})]})]});};export default Gameboard;","map":{"version":3,"names":["useState","Cell","jsx","_jsx","jsxs","_jsxs","previousRow","previousCol","start","totalTime","count","Gameboard","props","gameOver","win","currentLevel","level","r","c","getRandomValue","max","min","Math","floor","random","_useState","newDriver","i","j","isClicked","value","_useState2","_slicedToArray","driver","setDriver","memoizationTable","rowCells","push","numRows","length","numCols","row","col","val","targetSum","handleClick","prevDriver","Date","getTime","_toConsumableArray","currentSum","gameboardRows","_loop","_i","_loop2","_j2","end","time","toFixed","document","getElementById","textContent","style","visibility","textShadow","color","onClick","isGameOver","winStatus","concat","children","handleReset","window","location","reload","resetGame","handleRefresh","className","id"],"sources":["/Users/TylerHaisman/OneDrive/Coding Projects/Portfolio Projects/GlowbitGame/glowbit/Glowbit/src/Gameboard.js"],"sourcesContent":["import { useState } from 'react';\n\nimport Cell from './Cell';\n\n// function getRandomValue() {\n//   let max = 36;\n//   let min = 1;\n//   return Math.floor(Math.random() * (max - min) + min);\n// }\n\nlet previousRow = -1;\nlet previousCol = -1;\nvar start = 0;\nvar totalTime = 0;\n\nlet count = 0;\n\nconst Gameboard = (props) => {\n\n  let gameOver = false;\n  let win = false;\n\n  let currentLevel = props.level;\n\n  let r = currentLevel + 1;\n  let c = currentLevel + 1;\n\n  function getRandomValue() {\n    let max = r * c;\n    let min = 1;\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const [driver, setDriver] = useState(() => {\n    const newDriver = [];\n    for (let i = 0; i < r; i++) {\n      newDriver[i] = [];\n      for (let j = 0; j < c; j++) {\n        newDriver[i][j] = { isClicked: false, value: getRandomValue() };\n      }\n    }\n    return newDriver;\n  });\n\n  const memoizationTable = [];\n  for (let i = 0; i < r; i++) {\n    const rowCells = [];\n    for (let j = 0; j < c; j++) {\n      rowCells.push(driver[i][j].value);\n    }\n    memoizationTable.push(rowCells);\n  }\n\n  let numRows = memoizationTable.length;\n  let numCols = memoizationTable[0].length;\n\n    memoizationTable[0][0] = driver[0][0].value;\n  for (let row = 1; row < numRows; row++) {\n    memoizationTable[row][0] = memoizationTable[row - 1][0] + driver[row][0].value;\n  }\n  for (let col = 1; col < numCols; col++) {\n    memoizationTable[0][col] = memoizationTable[0][col - 1] + driver[0][col].value;\n  }\n  for (let row = 1; row < numRows; row++) {\n    for (let col = 1; col < numCols; col++) {\n      let val = 0;\n      if (memoizationTable[row - 1][col] > memoizationTable[row][col - 1]) {\n        val = memoizationTable[row - 1][col];\n      } else {\n        val = memoizationTable[row][col - 1];\n      }\n      memoizationTable[row][col] = val + driver[row][col].value;\n    }\n  }\n\n  let targetSum = memoizationTable[numRows - 1][numCols - 1];\n\n  const handleClick = (row, col) => {\n    if(!gameOver){\n      if((row - 1 == previousRow && col == previousCol) || (row == previousRow && col - 1 == previousCol) || ((row == 0 && col == 0) && driver[row][col].isClicked == false)){\n        setDriver(prevDriver => {\n          count++;\n          if(count == 1){\n            start = new Date().getTime();\n          }\n          const newDriver = [...prevDriver];\n          newDriver[row][col].isClicked = !newDriver[row][col].isClicked;\n          previousRow = row;\n          previousCol = col;\n          return newDriver;\n        });\n      }\n    }\n  };\n\n  let currentSum = 0;\n\n  const gameboardRows = [];\n  for (let i = 0; i < r; i++) {\n    const rowCells = [];\n    for (let j = 0; j < c; j++) {\n      if(driver[i][j].isClicked){\n        currentSum += driver[i][j].value;\n      }\n      if(driver[r - 1][c - 1].isClicked && currentSum == targetSum){\n        gameOver = true;\n        win = true;\n        var end = new Date().getTime();\n        var time = end - start;\n        totalTime = (time/1000).toFixed(2);\n        document.getElementById(\"time\").textContent = \"Your Time: \" + totalTime + \"s\";\n        document.getElementById(\"gameover\").textContent = \"Game Over\";\n        document.getElementById(\"aftergame\").style.visibility = \"visible\";\n        document.getElementById(\"winstatus\").textContent = \"You Won!\";\n        document.getElementById(\"winstatus\").style.textShadow = \"0 0 40px #1aff00\";\n        document.getElementById(\"winstatus\").style.color = \"#1aff00\";\n        document.getElementById(\"endbtn\").textContent = \"Next Level\";\n        // var button = document.createElement(\"button\");\n        // button.innerHTML = \"Next Level\";\n        // var buttons = document.getElementById(\"buttons\");\n        // buttons.appendChild(button);\n        // button.addEventListener (\"click\", function() {\n        //   handleReset();\n        // });\n      }\n      if(driver[r - 1][c - 1].isClicked && currentSum != targetSum){\n        gameOver = true;\n        win = false;\n        var end = new Date().getTime();\n        var time = end - start;\n        totalTime = (time/1000).toFixed(2);\n        document.getElementById(\"time\").textContent = \"Your Time: \" + totalTime + \"s\";\n        document.getElementById(\"gameover\").textContent = \"Game Over\";\n        document.getElementById(\"aftergame\").style.visibility = \"visible\";\n        document.getElementById(\"winstatus\").textContent = \"You Lost\";\n        document.getElementById(\"winstatus\").style.textShadow = \"0 0 40px #ff0000\";\n        document.getElementById(\"winstatus\").style.color = \"#ff0000\";\n        document.getElementById(\"endbtn\").textContent = \"Play Again\";\n        // var button = document.createElement(\"button\");\n        // button.innerHTML = \"Play Again\";\n        // var buttons = document.getElementById(\"buttons\");\n        // buttons.appendChild(button);\n        // button.addEventListener (\"click\", function() {\n        //   handleRefresh();\n        // });\n      }\n      rowCells.push(\n        <Cell\n          key={`${i}-${j}`}\n          value={driver[i][j].value}\n          isClicked={driver[i][j].isClicked}\n          onClick={() => handleClick(i, j)}\n          isGameOver={gameOver}\n          winStatus={win}\n        />\n      );\n    }\n    gameboardRows.push(<tr key={i}>{rowCells}</tr>);\n  }\n\n  const handleReset = () => {\n    if(!win){\n      window.location.reload();\n    }\n    else{\n      props.resetGame();\n\n      previousRow = -1;\n      previousCol = -1;\n      start = 0;\n      totalTime = 0;\n      count = 0;\n      currentSum = 0;\n  \n      gameOver = false;\n      win = false;\n  \n      setDriver(prevDriver => {\n  \n        currentLevel++;\n  \n        r = currentLevel + 1;\n        c = currentLevel + 1;\n  \n        const newDriver = [];\n      for (let i = 0; i < r; i++) {\n        newDriver[i] = [];\n        for (let j = 0; j < c; j++) {\n          newDriver[i][j] = { isClicked: false, value: getRandomValue() };\n        }\n      }\n      return newDriver;\n      });\n      // additional reset logic goes here\n  \n      document.getElementById(\"aftergame\").style.visibility = \"hidden\";\n    }\n  };\n\n  const handleRefresh = () => {\n    window.location.reload();\n  };\n\n  return (\n          <div className=\"gameboard\">\n      <table>\n        <tbody>{gameboardRows}</tbody>\n      </table>\n      <div id=\"aftergame\" className=\"gameover\">\n            <h1 id=\"gameover\"></h1>\n            <h2 id=\"winstatus\"></h2>\n            <div className=\"runtime\">\n            <p id=\"time\"></p>\n          </div>\n          <div id=\"buttons\" className=\"buttons\">\n            {/* <button onClick={handleRefresh} id=\"endbtn\">Play Again</button> */}\n            <button onClick={handleReset} id=\"endbtn\">Next Level</button>\n            {/* <button>Next Level</button> */}\n          </div>\n          </div>\n    </div>\n  );\n};\n\nexport default Gameboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}