{"ast":null,"code":"var _jsxFileName = \"/Users/TylerHaisman/OneDrive/Coding Projects/Web Development/Glowbit/glowbit/src/Cell.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// const Cell = (props) => {\n//     const [clicked, setClicked] = useState(false);\n//     const [bgColor, setBgColor] = useState(\"#ffffff2e\");\n\n//     let max = 36;\n//     let min = 1;\n//     let value = Math.floor(Math.random() * (max - min) + min);\n\n//     useEffect(() => {\n//         if (clicked) {\n//             setBgColor(\"#ffffff6d\");\n//         } else {\n//             setBgColor(\"#ffffff2e\");\n//         }\n//     }, [clicked]);\n\n//     const handleClick = () => {\n//         setClicked(!clicked);\n//     };\n\n//     return (\n//         <th onClick={handleClick} style={{ backgroundColor: bgColor }}>\n//             {value}\n//         </th>\n//     );\n// };\n\n// export default Cell;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = props => {\n  _s();\n  const [clicked, setClicked] = useState(false);\n  const [bgColor, setBgColor] = useState(\"#ffffff2e\");\n  const [value, setValue] = useState(getRandomValue());\n  function getRandomValue() {\n    let max = 36;\n    let min = 1;\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  function handleClick() {\n    setClicked(!clicked);\n    setValue(getRandomValue());\n  }\n  return /*#__PURE__*/_jsxDEV(\"th\", {\n    onClick: handleClick,\n    style: {\n      backgroundColor: bgColor\n    },\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Cell, \"7khOlBHm6fAomt2u4YtWZ0NNfwU=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cell","props","_s","clicked","setClicked","bgColor","setBgColor","value","setValue","getRandomValue","max","min","Math","floor","random","handleClick","onClick","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/TylerHaisman/OneDrive/Coding Projects/Web Development/Glowbit/glowbit/src/Cell.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n// const Cell = (props) => {\n//     const [clicked, setClicked] = useState(false);\n//     const [bgColor, setBgColor] = useState(\"#ffffff2e\");\n\n//     let max = 36;\n//     let min = 1;\n//     let value = Math.floor(Math.random() * (max - min) + min);\n\n//     useEffect(() => {\n//         if (clicked) {\n//             setBgColor(\"#ffffff6d\");\n//         } else {\n//             setBgColor(\"#ffffff2e\");\n//         }\n//     }, [clicked]);\n\n//     const handleClick = () => {\n//         setClicked(!clicked);\n//     };\n\n//     return (\n//         <th onClick={handleClick} style={{ backgroundColor: bgColor }}>\n//             {value}\n//         </th>\n//     );\n// };\n\n// export default Cell;\n\n\nimport React, { useState } from \"react\";\n\nconst Cell = (props) => {\n    const [clicked, setClicked] = useState(false);\n    const [bgColor, setBgColor] = useState(\"#ffffff2e\");\n    const [value, setValue] = useState(getRandomValue());\n\n    function getRandomValue() {\n        let max = 36;\n        let min = 1;\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    function handleClick() {\n        setClicked(!clicked);\n        setValue(getRandomValue());\n    }\n\n    return (\n        <th onClick={handleClick} style={{ backgroundColor: bgColor }}>\n            {value}\n        </th>\n    );\n};\n\nexport default Cell;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,WAAW,CAAC;EACnD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,cAAc,CAAC,CAAC,CAAC;EAEpD,SAASA,cAAcA,CAAA,EAAG;IACtB,IAAIC,GAAG,GAAG,EAAE;IACZ,IAAIC,GAAG,GAAG,CAAC;IACX,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,GAAG,GAAGC,GAAG,CAAC,GAAGA,GAAG,CAAC;EACxD;EAEA,SAASI,WAAWA,CAAA,EAAG;IACnBX,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBK,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC;EAC9B;EAEA,oBACIV,OAAA;IAAIiB,OAAO,EAAED,WAAY;IAACE,KAAK,EAAE;MAAEC,eAAe,EAAEb;IAAQ,CAAE;IAAAc,QAAA,EACzDZ;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb,CAAC;AAACrB,EAAA,CArBIF,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAuBV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}