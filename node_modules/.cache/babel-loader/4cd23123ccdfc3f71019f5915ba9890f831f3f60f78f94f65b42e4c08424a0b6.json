{"ast":null,"code":"var _jsxFileName = \"/Users/TylerHaisman/OneDrive/Coding Projects/Web Development/Glowbit/glowbit/src/Gameboard.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import Cell from './Cell';\n\n// //Game logic\n\n// const Gameboard = () => {\n\n//   const [clicked, setClicked] = useState(false);\n//   const handleClick = () => {\n//     setClicked(!clicked);\n// };\n\n//     return (  \n//         <div className=\"gameboard\">\n//         <table>\n//           <tr>\n//             <th><div className=\"bit\"></div></th>\n//             <Cell onClick={handleClick} isClicked={clicked}></Cell>\n//             <Cell></Cell>\n//             <Cell></Cell>\n//             <Cell></Cell>\n//             <Cell></Cell>\n//           </tr>\n//         </table>\n//       </div>\n//     );\n// }\n\n// export default Gameboard;\n\nimport { useState } from 'react';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gameboard = () => {\n  _s();\n  const [clicked, setClicked] = useState(false);\n  const rows = 5;\n  const cols = 5;\n  const handleClick = () => {\n    setClicked(!clicked);\n  };\n\n  // Create a 2D array using nested loops\n  const cells = [];\n  for (let i = 0; i < rows; i++) {\n    const row = [];\n    for (let j = 0; j < cols; j++) {\n      row.push( /*#__PURE__*/_jsxDEV(Cell, {\n        isClicked: clicked,\n        onClick: handleClick\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this));\n    }\n    cells.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: row\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameboard\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: cells\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Gameboard, \"NL05b5J4z4O/U6wEzhVGl+YEdv8=\");\n_c = Gameboard;\nexport default Gameboard;\nvar _c;\n$RefreshReg$(_c, \"Gameboard\");","map":{"version":3,"names":["useState","Cell","jsxDEV","_jsxDEV","Gameboard","_s","clicked","setClicked","rows","cols","handleClick","cells","i","row","j","push","isClicked","onClick","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["/Users/TylerHaisman/OneDrive/Coding Projects/Web Development/Glowbit/glowbit/src/Gameboard.js"],"sourcesContent":["// import { useState } from 'react';\n// import Cell from './Cell';\n\n// //Game logic\n\n\n// const Gameboard = () => {\n\n//   const [clicked, setClicked] = useState(false);\n//   const handleClick = () => {\n//     setClicked(!clicked);\n// };\n\n//     return (  \n//         <div className=\"gameboard\">\n//         <table>\n//           <tr>\n//             <th><div className=\"bit\"></div></th>\n//             <Cell onClick={handleClick} isClicked={clicked}></Cell>\n//             <Cell></Cell>\n//             <Cell></Cell>\n//             <Cell></Cell>\n//             <Cell></Cell>\n//           </tr>\n//         </table>\n//       </div>\n//     );\n// }\n \n// export default Gameboard;\n\nimport { useState } from 'react';\nimport Cell from './Cell';\n\nconst Gameboard = () => {\n  const [clicked, setClicked] = useState(false);\n  const rows = 5;\n  const cols = 5;\n\n  const handleClick = () => {\n    setClicked(!clicked);\n  };\n\n  // Create a 2D array using nested loops\n  const cells = [];\n  for (let i = 0; i < rows; i++) {\n    const row = [];\n    for (let j = 0; j < cols; j++) {\n      row.push(\n        <Cell key={`${i}-${j}`} isClicked={clicked} onClick={handleClick} />\n      );\n    }\n    cells.push(<tr key={i}>{row}</tr>);\n  }\n\n  return (\n    <div className=\"gameboard\">\n      <table>\n        <tbody>{cells}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Gameboard;\n\n\n"],"mappings":";;AAAA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMQ,IAAI,GAAG,CAAC;EACd,MAAMC,IAAI,GAAG,CAAC;EAEd,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBH,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;;EAED;EACA,MAAMK,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,EAAEI,CAAC,EAAE,EAAE;IAC7B,MAAMC,GAAG,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,IAAI,EAAEK,CAAC,EAAE,EAAE;MAC7BD,GAAG,CAACE,IAAI,eACNZ,OAAA,CAACF,IAAI;QAAmBe,SAAS,EAAEV,OAAQ;QAACW,OAAO,EAAEP;MAAY,GAArD,GAAEE,CAAE,IAAGE,CAAE,EAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CACrE,CAAC;IACH;IACAV,KAAK,CAACI,IAAI,eAACZ,OAAA;MAAAmB,QAAA,EAAaT;IAAG,GAAPD,CAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,CAAC;EACpC;EAEA,oBACElB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAD,QAAA,eACxBnB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,EAAQX;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}